CREATE TABLE productos (
  id SERIAL PRIMARY KEY,
  nombre VARCHAR(255) NOT NULL,
  descripcion TEXT,
  precio DECIMAL(10, 2) NOT NULL,
  stock INT NOT NULL,
  categoria_id INT REFERENCES categorias(id) ON DELETE SET NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE categorias (
  id SERIAL PRIMARY KEY,
  nombre VARCHAR(255) NOT NULL,
  descripcion TEXT
);
CREATE TABLE ventas (
  id SERIAL PRIMARY KEY,
  total DECIMAL(10, 2) NOT NULL,
  fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  cliente_id INT REFERENCES clientes(id) ON DELETE SET NULL,
  vendedor_id INT REFERENCES usuarios(id) ON DELETE SET NULL,
  estado VARCHAR(50) NOT NULL DEFAULT 'Pendiente',
  metodo_pago VARCHAR(50) NOT NULL
);
CREATE TABLE clientes (
  id SERIAL PRIMARY KEY,
  nombre VARCHAR(255) NOT NULL,
  email VARCHAR(255),
  telefono VARCHAR(50)
);
CREATE TABLE usuarios (
  id SERIAL PRIMARY KEY,
  nombre VARCHAR(255) NOT NULL,
  email VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  rol VARCHAR(50) NOT NULL,  -- Por ejemplo: admin, cajero
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE stock (
  id SERIAL PRIMARY KEY,
  producto_id INT REFERENCES productos(id),
  cantidad INT,
  tipo_movimiento VARCHAR(50),  -- Ejemplo: "Entrada", "Salida"
  fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE detalle_ventas (
  id SERIAL PRIMARY KEY,
  venta_id INTEGER REFERENCES ventas(id) ON DELETE CASCADE,
  producto_id INTEGER REFERENCES productos(id),
  cantidad INTEGER NOT NULL,
  precio_unitario NUMERIC(10,2) NOT NULL
);

ALTER TABLE ventas
ADD CONSTRAINT fk_vendedor
FOREIGN KEY (vendedor_id)
REFERENCES usuarios(id);

select * from productos p 
select * from categorias c 
select * from ventas

select * from Users 